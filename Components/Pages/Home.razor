@page "/"
@using AttendanceChecker.Models
@inject IHttpClientFactory ClientFactory
@inject NavigationManager Navigation
@rendermode InteractiveServer

@code {
    private HttpClient? _httpClient;
    private List<Kolegij>? kolegiji;
    private bool isLoading = true;
    private bool hasError = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Use the named HttpClient ("API") to call your API
            _httpClient = ClientFactory.CreateClient("API");

            // Fetch the kolegiji data from your API
            kolegiji = await _httpClient.GetFromJsonAsync<List<Kolegij>>("api/Attendance/kolegiji");
        }
        catch (Exception ex)
        {
            hasError = true;
            Console.WriteLine($"Error fetching kolegiji: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    // Navigate to the details page for the selected kolegij
    private void OnCardClick(Kolegij kolegij)
    {
        Navigation.NavigateTo($"/kolegij-detalji/{kolegij.KolegijId}");
    }
}

<PageTitle>Kolegiji</PageTitle>

<h3>Kolegiji</h3>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (hasError)
{
    <p>Error loading kolegiji.</p>
}
else if (kolegiji is not null && kolegiji.Any())
{
    <div class="grid-container">
        @foreach (var kolegij in kolegiji)
        {
            <div class="card" @onclick="() => OnCardClick(kolegij)">
                <div class="card-body">
                    <h5 class="card-title">@kolegij.Naziv</h5>
                    <p class="card-text text-muted">
                        Prof: @kolegij.Profesor <br />
                        Asistent: @kolegij.Asistent
                    </p>
                </div>
            </div>
        }

    </div>
}
else
{
    <p>No kolegiji available.</p>
}

<style>
    .grid-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
        padding: 20px;
    }

    .card {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        cursor: pointer;
        padding: 15px;
        pointer-events: all;
    }

    .card:hover {
        transform: scale(1.05);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }

    .card-body {
        padding: 15px;
    }

    .card-title {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .card-text {
        font-size: 14px;
        color: #6c757d; /* Bootstrap's muted text color */
    }

    .text-muted {
        color: #6c757d !important;
    }

</style>